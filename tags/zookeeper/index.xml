<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ZooKeeper on YZLC</title><link>https://yzlc.github.io/tags/zookeeper/</link><description>Recent content in ZooKeeper on YZLC</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 12 May 2021 09:23:33 +0800</lastBuildDate><atom:link href="https://yzlc.github.io/tags/zookeeper/index.xml" rel="self" type="application/rss+xml"/><item><title>ZooKeeper</title><link>https://yzlc.github.io/post/note/dev/java/zookeeper/</link><pubDate>Wed, 12 May 2021 09:23:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/zookeeper/</guid><description>&lt;blockquote>
&lt;p>分布式协调服务（动物园管理员）。提供了高可用、高性能、稳定的分布式数据一致性解决方案，通常被用于实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master 选举、分布式锁和分布式队列等功能&lt;/p>
&lt;/blockquote>
&lt;h2 id="data-model数据模型">Data model（数据模型）&lt;/h2>
&lt;blockquote>
&lt;p>多叉树形结构，根节点以“/”来代表。数据节点被称为znode（&amp;quot;/&amp;ldquo;路径表示）&lt;/p>
&lt;/blockquote>
&lt;h3 id="znode类型">znode类型&lt;/h3>
&lt;blockquote>
&lt;p>znode由2部分组成：stat（状态信息）、data（数据）&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>持久（PERSISTENT）节点：一旦创建就一直存在即使ZooKeeper集群宕机，直到将其删除。&lt;/li>
&lt;li>临时（EPHEMERAL）节点：临时节点的生命周期是与 客户端会话（session） 绑定的，会话消失则节点消失 。并且，临时节点只能做叶子节点 ，不能创建子节点。&lt;/li>
&lt;li>持久顺序（PERSISTENT_SEQUENTIAL）节点：除了具有持久（PERSISTENT）节点的特性之外， 子节点的名称还具有顺序性。比如 /node1/app0000000001 、/node1/app0000000002 。&lt;/li>
&lt;li>临时顺序（EPHEMERAL_SEQUENTIAL）节点：除了具备临时（EPHEMERAL）节点的特性之外，子节点的名称还具有顺序性。&lt;/li>
&lt;/ul>
&lt;h2 id="acl权限控制">ACL（权限控制）&lt;/h2>
&lt;h3 id="znode">znode&lt;/h3>
&lt;ul>
&lt;li>CREATE : 能创建子节点&lt;/li>
&lt;li>READ ：能获取节点数据和列出其子节点&lt;/li>
&lt;li>WRITE : 能设置/更新节点数据&lt;/li>
&lt;li>DELETE : 能删除子节点&lt;/li>
&lt;li>ADMIN : 能设置节点 ACL 的权限&lt;/li>
&lt;/ul>
&lt;h3 id="身份认证">身份认证&lt;/h3>
&lt;ul>
&lt;li>world ： 默认方式，所有用户都可无条件访问。&lt;/li>
&lt;li>auth :不使用任何 id，代表任何已认证的用户。&lt;/li>
&lt;li>digest :用户名:密码认证方式： username:password 。&lt;/li>
&lt;li>ip : 对指定 ip 进行限制。&lt;/li>
&lt;/ul>
&lt;h2 id="watcher事件监听器">Watcher（事件监听器）&lt;/h2>
&lt;blockquote>
&lt;p>允许用户在指定节点上注册一些 Watcher，并且在一些特定事件触发的时候，ZooKeeper 服务端会将事件通知到感兴趣的客户端上去，该机制是 ZooKeeper 实现分布式协调服务的重要特性&lt;/p>
&lt;/blockquote></description></item></channel></rss>