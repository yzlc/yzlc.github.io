<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>note on lim</title><link>https://yzlc.github.io/categories/note/</link><description>Recent content in note on lim</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 03 Apr 2023 15:32:33 +0800</lastBuildDate><atom:link href="https://yzlc.github.io/categories/note/index.xml" rel="self" type="application/rss+xml"/><item><title>centos7</title><link>https://yzlc.github.io/post/note/linux/centos7/</link><pubDate>Mon, 03 Apr 2023 15:32:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/linux/centos7/</guid><description>DNS配置 通过 ifconfig 或 nmcli connection show 命令确定当前使用的网卡名称（如：eth0、eno1 等，以下均以 eno1 为例进行设置） 通过命令 nmcli con mod eno1 ipv4.dns &amp;ldquo;114.114.114.114 8.8.8.8&amp;rdquo; 修改对应网卡的 dns</description></item><item><title>switch</title><link>https://yzlc.github.io/post/note/switch/</link><pubDate>Sun, 08 Jan 2023 17:16:10 +0800</pubDate><guid>https://yzlc.github.io/post/note/switch/</guid><description>大气层 按r键打开游戏 dbi 拖到MicroSD install 资源 bootloader说明</description></item><item><title>vue</title><link>https://yzlc.github.io/post/note/dev/vue/</link><pubDate>Sat, 08 Jan 2022 10:45:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/vue/</guid><description>数据绑定 v-bind单向，v-model(表单元素)双向 el、data的其他写法 vm.$mount('#root') data(){ return {msg:'1'} } 事件处理 @click=&amp;quot;demo($event,1)&amp;quot; 事件修饰符 prevent：阻止默认事件（</description></item><item><title>nodejs</title><link>https://yzlc.github.io/post/note/dev/nodejs/</link><pubDate>Sat, 23 Oct 2021 16:11:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/nodejs/</guid><description>安装镜像 1 npm install -g cnpm --registry=https://registry.npm.taobao.org 清理缓存 1 npm cache clean -force</description></item><item><title>分布式</title><link>https://yzlc.github.io/post/note/dev/java/distributed/</link><pubDate>Wed, 12 May 2021 09:52:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/distributed/</guid><description>拆分成多个子服务,将这些子服务都部署在不同的服务器上 CAP 因为P的存在，要求我们在A和C中做出权衡 一致性（Consistency）：所有节点访问</description></item><item><title>ZooKeeper</title><link>https://yzlc.github.io/post/note/dev/java/zookeeper/</link><pubDate>Wed, 12 May 2021 09:23:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/zookeeper/</guid><description>分布式协调服务（动物园管理员）。提供了高可用、高性能、稳定的分布式数据一致性解决方案，通常被用于实现诸如数据发布/订阅、负载均衡、命名服务、</description></item><item><title>nio</title><link>https://yzlc.github.io/post/note/dev/java/nio/</link><pubDate>Wed, 28 Apr 2021 14:55:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/nio/</guid><description>Non-blocking IO。IO面向字节流和字符流（文件）；NIO面向通道和缓冲区（网络） Channel 通道 类型：FileChannel、DatagramChannel（U</description></item><item><title>redis</title><link>https://yzlc.github.io/post/note/dev/java/redis/</link><pubDate>Fri, 23 Apr 2021 15:08:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/redis/</guid><description>内存数据库。丰富的数据类型、灾难恢复、集群、过期策略 数据结构 类型 命令 场景 string set,get,strlen,exists,decr,incr,setex 计数 list rpush,lpop,lpush,rpop,lrange、</description></item><item><title>缓存</title><link>https://yzlc.github.io/post/note/dev/java/cache/</link><pubDate>Tue, 20 Apr 2021 09:03:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/cache/</guid><description>特征 命中率、最大空间、清空策略 过期数据删除策略 惰性删除：只会在取出 key 的时候才对数据进行过期检查。对 CPU 友好，但是可能会造成太多过期 key 没有被删除</description></item><item><title>array</title><link>https://yzlc.github.io/post/note/dev/algorithms/array/</link><pubDate>Sat, 20 Feb 2021 19:15:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/algorithms/array/</guid><description>稀疏数组 压缩棋盘。记录数组一共有几行几列，有多少个不同的值 11 22 0 0 0 0 0 0 33 44 0 0 0 0 0 0 55 66 77 0 0 0 0 0 0 0 88 0 0 0 0 0 0 0 99 行 列 值 [0] 5 7</description></item><item><title>powershell</title><link>https://yzlc.github.io/post/note/win/powershell/</link><pubDate>Mon, 28 Dec 2020 15:41:10 +0800</pubDate><guid>https://yzlc.github.io/post/note/win/powershell/</guid><description>代理 1 2 3 4 5 6 #设置代理 $Env:https_proxy=&amp;#34;socks5://localhost:10808&amp;#34; #取消代理 #查看代理 $env:https_proxy 环境变量 1 2 3 4 5 6 7 8 9 10 [environment]::SetEnvironmentvariable(&amp;#34;GOPATH&amp;#34;, &amp;#34;$env:USERPROFILE\gopath&amp;#34;, &amp;#34;User&amp;#34;) #调用命令结果：$(命令) #获取原有用户 PATH 变量：$([e</description></item><item><title>leetcode初级算法</title><link>https://yzlc.github.io/post/note/dev/leetcode/easy/</link><pubDate>Thu, 10 Sep 2020 10:52:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/leetcode/easy/</guid><description>数组 旋转图像 将矩阵划分为4部分旋转 ij 交换轨迹 00 00-&amp;gt;30-&amp;gt;33-&amp;gt;03 01 01-&amp;gt;20-&amp;gt;32-&amp;gt;13 10 10-&amp;gt;31-&amp;gt;23-&amp;gt;02 11 11-&amp;gt;21-&amp;gt;22-&amp;gt;12 坐标 (i,j)-&amp;gt;(len-1-j,i)-&amp;gt;(len-1-i,len-1-j)-&amp;gt;(j,len-1-i) 1 2 3 4 5 6 7 8 9 10 11 12 public void rotate(int[][] matrix){ int len = matrix.length; for (int i = 0; i &amp;lt; (len + 1) / 2; i++) { for (int j</description></item><item><title>consul</title><link>https://yzlc.github.io/post/note/dev/java/consul/</link><pubDate>Tue, 11 Aug 2020 10:29:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/consul/</guid><description>单节点 1 2 mkdir -p /usr/local/consul-data/logs nohup ./consul agent -server -data-dir=/usr/local/consul-data/ -node=agent-one -bind=服务IP -bootstrap-expect=1 -client=0.0.0.0 -ui &amp;gt; /usr/local/consul-data/logs/consul.log 2&amp;gt;&amp;amp;1 &amp;amp;</description></item><item><title>spring Security</title><link>https://yzlc.github.io/post/note/dev/java/spring/security/</link><pubDate>Thu, 06 Aug 2020 15:01:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/spring/security/</guid><description>maven 1 2 3 4 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-security&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; config 1 2 3 4 5 6 7 8 9 10 @Configuration public class WebSecurityConfig extends WebSecurityConfigurerAdapter { @Override protected void configure(HttpSecurity http) throws Exception { http.authorizeRequests() .anyRequest().authenticated() .and().formLogin().loginProcessingUrl(&amp;#34;/login&amp;#34;).permitAll() .and().csrf().disable(); } } 1 2 spring.security.user.name=admin spring.security.user.password={bcrypt}$2a$10$io1baOv5SiP2G0DR.Dye.OQjtj1W8Aba31pGecyYdxgoXLkLjdfm.</description></item><item><title>activiti</title><link>https://yzlc.github.io/post/note/dev/java/activiti/</link><pubDate>Wed, 29 Jul 2020 16:07:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/activiti/</guid><description>工作流开源框架 快速入门 BPMN 业务流程建模与标注（Business Process Model and Notation，BPMN) ，描述流程的基本符号，包括这些图元如何组合成一</description></item><item><title>bat</title><link>https://yzlc.github.io/post/note/win/bat/</link><pubDate>Sun, 30 Jun 2019 15:42:10 +0800</pubDate><guid>https://yzlc.github.io/post/note/win/bat/</guid><description>变量 ps&amp;gt;ls env: 用户目录：%UserProfile% 开机启动（用户）：%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup 删目录、文</description></item><item><title>nginx</title><link>https://yzlc.github.io/post/note/win/nginx/</link><pubDate>Sun, 30 Jun 2019 15:42:10 +0800</pubDate><guid>https://yzlc.github.io/post/note/win/nginx/</guid><description>nginx 启动 start nginx 正常停止 nginx -s quit 快速停止 nginx -s stop 代理 地址 1 2 3 4 5 6 7 8 9 server { listen 9001; server_name 192.168.1.10; location /11/ { #192.168.1.10:9001/11/test -&amp;gt; http://192.168.1.11:8080/test proxy_pass http://192.168.1.11:8080/; } } 服务器 1 2 3 4 5 6 7 8 9 10 11 12 stream { #stre</description></item><item><title>linux</title><link>https://yzlc.github.io/post/note/linux/linux/</link><pubDate>Sat, 01 Jun 2019 10:32:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/linux/linux/</guid><description>查找 find / -type d -name *tomcat* 2&amp;gt;/dev/null 按文件/目录大小排序 du -sh * | sort -rn | head 查看进程运行的完整路径 ll /proc/PID 杀进程 pkill -f 进程名称 后台运行 nohup xx &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp; 脚本 1 2 3 #!/bin/bash day=`date +%Y%m%d%H%M%S` echo &amp;#3</description></item><item><title>正则表达式</title><link>https://yzlc.github.io/post/note/dev/regular/</link><pubDate>Mon, 06 May 2019 10:32:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/regular/</guid><description>匹配行 ^.*内容.*$ ^.*内容.*\r?\n 删除字符 A之后字符：A.*$ A之前字符：^([^s]*)A 换行: \n</description></item><item><title>sql</title><link>https://yzlc.github.io/post/note/dev/sql/</link><pubDate>Sat, 04 May 2019 10:32:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/sql/</guid><description>建表 1 2 3 4 5 CREATE INDEX idx_table_name_column_name ON table_name(column_name); CREATE UNIQUE INDEX idx_table_name_column_name ON table_name(column_name); CREATE sequence seq_table_name; COMMENT ON TABLE table_name IS &amp;#39;table_name&amp;#39;; COMMENT ON COLUMN table_name.column_name IS &amp;#39;column_name&amp;#39;; 修改表 1 2 3 4 DROP sequence seq_name; ALTER TABLE table_name ADD (column_name datatype,column_name datatype); ALTER TABLE table_name MODIFY (column_name datatype,column_name datatype); ALTER TABLE table_name DROP (column_name,column_name); 复制表 1 CREATE TABLE NEW_TAB AS</description></item><item><title>ibatis</title><link>https://yzlc.github.io/post/note/dev/java/ibatis/</link><pubDate>Thu, 02 May 2019 10:32:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/ibatis/</guid><description>批量merge Oracle 参数做判断，需要传入map 1 2 3 4 5 6 &amp;lt;statement id=&amp;#34;merge&amp;#34; parameterClass=&amp;#34;map&amp;#34;&amp;gt; &amp;lt;iterate property=&amp;#34;list&amp;#34; open=&amp;#34;begin&amp;#34; close=&amp;#34;;end;&amp;#34; conjunction=&amp;#34;;&amp;#34;&amp;gt; merge into... &amp;lt;isNotEmpty property=&amp;#34;list[].id&amp;#34;&amp;gt; id=id, &amp;lt;/isNotEmpty&amp;gt; 不用判断参数，传入list 1 2 3 &amp;lt;statement id=&amp;#34;merge&amp;#34; parameterClass=&amp;#34;list&amp;#34;&amp;gt; &amp;lt;iterate open=&amp;#34;begin&amp;#34; close=&amp;#34;;end;&amp;#34; conjunction=&amp;#34;;&amp;#34;&amp;gt; merge into... #list[].id# mysql 1 2</description></item><item><title>pom配置</title><link>https://yzlc.github.io/post/note/dev/java/maven/</link><pubDate>Tue, 05 Mar 2019 10:32:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/maven/</guid><description>pom.xml 基础配置 project 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 &amp;lt;properties&amp;gt; &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;build&amp;gt; &amp;lt;!-- 打包后的名称war/jar --&amp;gt; &amp;lt;finalName&amp;gt;pkgName&amp;lt;/finalName&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.3.2&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;encoding&amp;gt;utf-8&amp;lt;/encoding&amp;gt; &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt; &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt; &amp;lt;!-- 打包跳过测</description></item><item><title>quartz</title><link>https://yzlc.github.io/post/note/dev/java/quartz/</link><pubDate>Fri, 08 Feb 2019 10:32:33 +0800</pubDate><guid>https://yzlc.github.io/post/note/dev/java/quartz/</guid><description>quartzJava下的一种作业控制开源框架。 核心概念 Job 表示一个工作，要执行的具体内容。此接口中只有一个方法，如下： void execute(JobExecutionContext context) JobDetail 表示一个具体的可</description></item></channel></rss>